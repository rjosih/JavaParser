package root;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

public final class MainParser {
	final static String FILE_NAME = "input_5";
	final static String OUTPUT_FILE_NAME = FILE_NAME + "(1)" ;
    public static int cursor = 0;
    static CheckIdentifier checkIdentifier;
    private WriteFile handleFile;
    private ReadFile readFile;

	public static void main(String... args) throws IOException {
		MainParser binary = new MainParser();
		byte[] bytes = binary.readFile.readSmallBinaryFile(FILE_NAME);

        String output = parseByteArray(bytes);
        System.out.println(output);
	    binary.handleFile.writeSmallBinaryFile(bytes, OUTPUT_FILE_NAME);
	}

	private static String parseByteArray(byte[] bytes) {
       
        LinkedHashMap<String, String> dict = new LinkedHashMap<String, String>();
        byte noOfElem = bytes[cursor+5];
        
        cursor += 6;
//        System.out.println("No of elements: " + Integer.toString(noOfElem));
        for (int i=0; i< noOfElem; i++){
//            System.out.println("Loop run #" + Integer.toString(i));
            String key;
            
            // find key
            if (CheckIdentifier.checkIfString(bytes[cursor])){
                cursor++;
        
                key = "\'";
                
                while (bytes[cursor] != 0){
                    key += (char) bytes[cursor];
                    cursor++;
                }
                cursor++;
                key += "\'";
                // System.out.println("key#" + Integer.toString(i+1) + ": " + key);
            }
            
            else if (CheckIdentifier.checkIfNumber(bytes[cursor])){
                cursor += 4;
        
                key = Integer.toString((int) bytes[cursor]);
                cursor++;

            }
            
            else {
                key = "NULL";
                System.out.println("Something is wrong in finding key#" + Integer.toString(i+1));
                System.out.println("Cursor position: " + Integer.toString(cursor));
                System.out.println("Byte at cursor: " + bytes[cursor]);
            }
            
//            System.out.print("key#" + Integer.toString(i+1) + ": " + key + "\t");
            
            // find value
            String value = null;
            if (CheckIdentifier.checkIfString(bytes[cursor])) {
                cursor++;
        
                value = "\'";
                
                while (bytes[cursor] != 0){
                    value += (char) bytes[cursor];
                    cursor++;
                }
                cursor++;                
                value += "\'";
            }
            
            else if (CheckIdentifier.checkIfNumber(bytes[cursor])) {
                cursor += 4;
        
                value = Integer.toString((int) bytes[cursor]);
                cursor++;
            }
            
            else if (CheckIdentifier.checkIfList(bytes[cursor])) {
                
                List<String> list = new ArrayList<String>();
                    
                cursor += 5;
                int noOfItems = (int) bytes[cursor];
                // System.out.println("Number of items in list: " + Integer.toString(noOfItems));
                
                cursor++;

                for (int k=0; k<noOfItems; k++){
                    
                    String item = null;
                    if (CheckIdentifier.checkIfString(bytes[cursor])) {
                        cursor++;
        
                        item = "\'";
                
                        while (bytes[cursor] != 0){
                            item += (char) bytes[i];
                            cursor++;
                        }

                    item += "\'";
                    }
            
                    else if (CheckIdentifier.checkIfNumber(bytes[cursor])) {
                        cursor += 4;
                
                        item = Integer.toString((int) bytes[cursor]);
                        // cursor++;
                    }

                    else if (CheckIdentifier.checkIfDictionary(bytes[cursor])) {
                        item = parseByteArray(bytes);
                    }

                    else {
                        System.out.println("Reached else statement in list#" + Integer.toString(k));
                    }
                    
                    list.add(item);
                }
                value = list.toString();
                // System.out.println(list);
                
            }
            
            else if (checkIdentifier.checkIfDictionary(bytes[cursor])) {
                value = parseByteArray(bytes);
            }

            else {
                value = "NULL";
                System.out.println("Something is wrong in finding value#" + Integer.toString(i+1));
                System.out.println("Cursor position: " + Integer.toString(cursor));
                System.out.println("Byte at cursor: " + bytes[cursor]);
            }
            
//            System.out.println("value#" + Integer.toString(i+1) + ": " + value.toString());
            
            // add key, value to dictionary
            dict.put(key, value);
        }
        String out = "{" + "\n";
        Set<?> set = dict.entrySet();
        Iterator<?> it = set.iterator();
        while(it.hasNext()){
            Map.Entry mentry = (Map.Entry)it.next();
            out += "\t";
            out += mentry.getKey();
            out += ": ";

            out += mentry.getValue();
            out += ", ";
            out += "\n";
        }
        out += "\t" + "\r" + "}";
        return out;
    }	
} 